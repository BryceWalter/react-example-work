{"version":3,"file":"static/webpack/static/development/pages/index.js.95e858556939db0bcc49.hot-update.js","sources":["webpack:///./components/ToDoCard.js"],"sourcesContent":["import React, { Component } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport ToDoList from './ToDoList';\nimport AddToDo from './AddToDo';\nimport { CardHeader, Typography } from '@material-ui/core';\n\nclass ToDoCard extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            newToDo: '',\n            checked: [],\n            toDoList: [\n                {\n                    text: 'Something to do!'\n                },\n                {\n                    text: 'Something else to do!'\n                },\n                {\n                    text: 'Another thing to do!'\n                },\n                {\n                    text: 'Woah a lot to do!'\n                },\n                {\n                    text: 'Crazy thing to do!'\n                },\n            ]\n        };\n    }\n\n    handleToggle = value => () => {\n        const array = [...this.state.toDoList]; // make a separate copy of the array\n\n        if (value !== -1) {\n            array.splice(value, 1);\n            this.setState({toDoList: array});\n        }\n    };\n\n    handleChange = (e) => {\n        const { name, type, value } = e.target;\n        const val = type === 'number' ? parseFloat(value) : value;\n        this.setState({ [name]: val })\n    };\n\n    addToDo = value => () => {\n        const array = [...this.state.toDoList];\n        const toDoObj = { text: value }\n        array.push(toDoObj);\n\n        this.setState({toDoList: array})\n    }\n\n    render() {\n        return (\n            <Card >\n                <CardHeader title={'Stuff You Gotta Do'}>\n                </CardHeader>\n                <CardContent>\n                    <ToDoList handleToggle={this.handleToggle.bind(this)} toDoList={this.state.toDoList} checked={this.state.checked} />\n                </CardContent>\n                <AddToDo handleAddToDo={this.addToDo.bind(this)} handleToDoChange={this.handleChange} />\n            </Card>\n        );\n    }\n}\n\nexport default ToDoCard;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAyBA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAPA;AACA;AA1BA;AAkCA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AAvCA;AAwCA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AANA;AACA;AAvCA;AACA;AACA;AACA;AAEA;AADA;AAIA;AADA;AAIA;AADA;AAIA;AADA;AAIA;AADA;AAhBA;AAFA;AAuBA;AACA;;;AAwBA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AA5DA;AACA;AA8DA;;;;A","sourceRoot":""}