{"version":3,"file":"static/webpack/static/development/pages/index.js.d3d11c580d0c783a47dc.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React, { Component } from 'react';\nimport Head from '../components/Head';\nimport Grid from '@material-ui/core/Grid';\nimport ToDoCard from '../components/ToDoCard';\nimport AppToolbar from '../components/AppToolbar';\n\nclass Index extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            newToDo: '',\n            checked: [],\n            initialToDoList: [\n                {\n                    text: 'Something to do!'\n                },\n                {\n                    text: 'Something else to do!'\n                },\n                {\n                    text: 'Another thing to do!'\n                },\n                {\n                    text: 'Woah a lot to do!'\n                },\n                {\n                    text: 'Crazy thing to do!'\n                },\n            ],\n            toDoList: [\n                {\n                    text: 'Something to do!'\n                },\n                {\n                    text: 'Something else to do!'\n                },\n                {\n                    text: 'Another thing to do!'\n                },\n                {\n                    text: 'Woah a lot to do!'\n                },\n                {\n                    text: 'Crazy thing to do!'\n                },\n            ],\n        }\n    }\n\n    handleSearch = (e) => {\n        console.log(e.target.value)\n        var updatedList = this.state.initialToDoList;\n        updatedList = updatedList.filter((toDo) => {\n          return toDo.text.toLowerCase().search(\n            e.target.value.toLowerCase()) !== -1;\n        });\n\n        this.setState({toDoList: updatedList});\n    }\n\n    handleChange = (e) => {\n        const { name, type, value } = e.target;\n        const val = type === 'number' ? parseFloat(value) : value;\n        this.setState({ [name]: val })\n    };\n\n    handleKeyPress = (event) => {\n        if (event.key == 'Enter') {\n          this.addToDo(event.value)\n        }\n    }\n\n    addToDo = (value) => (e) => {\n        console.log(e.target.value)\n        if (e.key === 'Enter' || e.target.name === 'newToDoButton' || e.target.name === undefined) {\n            const array = [...this.state.toDoList];\n            const toDoObj = { text: value }\n            array.push(toDoObj);\n            this.setState({initialToDoList: array, toDoList: array, newToDo: ''})\n        }\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Head/>\n                <AppToolbar \n                    newToDo={this.state.newToDo}\n                    handleSearch={this.handleSearch}\n                    handleToDoChange={this.handleChange}\n                    handleAddToDo={this.addToDo}\n                />\n                <Grid \n                    style={{marginTop: '70px'}}\n                    container \n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"center\" >\n                    <Grid item md={3}></Grid>\n                    <Grid item xs={12} md={6}>\n                        <ToDoCard appState={this.state}/>  \n                    </Grid>\n                    <Grid item md={3}></Grid>\n                </Grid>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Index;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AA2CA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AApDA;AAqDA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AA1DA;AA4DA;AACA;AACA;AACA;AACA;AAhEA;AAiEA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AARA;AACA;AAhEA;AACA;AACA;AACA;AAEA;AADA;AAIA;AADA;AAIA;AADA;AAIA;AADA;AAIA;AADA;AAIA;AAEA;AADA;AAIA;AADA;AAIA;AADA;AAIA;AADA;AAIA;AADA;AAjCA;AAFA;AAwCA;AACA;;;AAkCA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AApGA;AACA;AAsGA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}