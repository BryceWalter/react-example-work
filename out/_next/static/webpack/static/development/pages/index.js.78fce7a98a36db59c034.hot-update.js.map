{"version":3,"file":"static/webpack/static/development/pages/index.js.78fce7a98a36db59c034.hot-update.js","sources":["webpack:///./components/ToDoList.js"],"sourcesContent":["import React, { Component } from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nclass ToDoList extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            checked: [],\n            toDoList: [\n                {\n                    id: 0,\n                    text: 'Something to do!'\n                },\n                {\n                    id: 1,\n                    text: 'Something else to do!'\n                },\n                {\n                    id: 2,\n                    text: 'Another thing to do!'\n                },\n                {\n                    id: 3,\n                    text: 'Woah a lot to do!'\n                },\n                {\n                    id: 4,\n                    text: 'Crazy thing to do!'\n                },\n            ]\n        };\n    }\n\n    handleToggle = value => () => {\n        const { checked } = this.state;\n        const currentIndex = checked.indexOf(value);\n        const newChecked = [...checked];\n\n        const array = [...this.state.toDoList]; // make a separate copy of the array\n        const index = array.indexOf(value)\n        console.log(index)\n    \n        if (currentIndex === -1) {\n          array.splice(value, 1);\n          console.log(array)\n        //   this.setState({toDoList: array});\n        } else {\n          newChecked.splice(currentIndex, 1);\n        }\n    \n        this.setState({\n          checked: newChecked,\n        });\n    };\n\n    render() {\n        return (\n            <List>\n            {this.state.toDoList.map(toDo => (\n                <ListItem key={toDo.id} role={undefined} dense button onClick={this.handleToggle(toDo.id)}>\n                <Checkbox\n                    checked={this.state.checked.indexOf(toDo.id) !== -1}\n                    tabIndex={-1}\n                    disableRipple\n                />\n                <ListItemText primary={toDo.text} />\n                </ListItem>\n            ))}\n            </List>\n        );\n    }\n}\n\nexport default ToDoList;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AA6BA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AApBA;AACA;AA5BA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAnBA;AAFA;AA2BA;AACA;;;AAuBA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPA;AAYA;;;;AApEA;AACA;AAsEA;;;;A","sourceRoot":""}